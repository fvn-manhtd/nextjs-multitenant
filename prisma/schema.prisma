// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Domains {
  id        String    @id @default(dbgenerated()) @map("id")
  domain    String    @unique @map("domain")
  name          String?
  description   String?  
  logo          String?  
  image         String?
  tenantId  String    @map("tenant_id")
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  

  @@map("domains")
}

model Admins {
  id         String    @id @default(dbgenerated()) @map("id")
  tenantId   String    @unique @map("tenant_id")
  name       String    @map("name")
  email      String    @unique @map("email")
  password   String    @map("password")
  status     Boolean   @default(false) @map("status")
  verifiedAt DateTime? @map("verified_at")
  createdAt  DateTime? @default(now()) @map("created_at")
  updatedAt  DateTime? @updatedAt @map("updated_at")
  
  adminProfiles AdminProfiles[]

  @@map("admins")
}

model AdminTokens {
  id        String    @id @default(dbgenerated()) @map("id")
  adminId   String    @map("admin_id")
  token     String    @map("token")
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")  

  @@map("admin_tokens")
}

model AdminProfiles {
  id          String   @id @default(dbgenerated()) @map("id")
  adminId     String   @map("admin_id")
  companyName String   @map("company_name")  
  website     String   @map("website")
  prefecture  String   @map("prefecture")
  address1    String   @map("address1")
  address2    String   @map("address2")
  tel         String   @map("tel")
  note        String   @map("note")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  admin Admins @relation(fields: [adminId], references: [id])

  @@map("admin_profiles")
}

model WorkingTimes {
  id       String @id @default(dbgenerated()) @map("id")
  tenantId String @map("tenant_id")

  startTime DateTime @map("start_time")
  endTime   DateTime @map("end_time")

  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")



  @@map("working_times")
}

model ExceptionSettingTimes {
  id        String    @id @default(dbgenerated()) @map("id")
  tenantId  String    @map("tenant_id")
  hours     Json      @map("hours")
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")



  @@map("exception_setting_times")
}

model TimeSlots {
  id           String         @id @default(dbgenerated()) @map("id")
  startTime    DateTime       @map("start_time")
  endTime      DateTime       @map("end_time")
  createdAt    DateTime?      @map("created_at")
  updatedAt    DateTime?      @updatedAt @map("updated_at")
  reservations Reservations[]

  @@map("time_slots")
}

model Reservations {
  id          String    @id @default(dbgenerated()) @map("id")
  tenantId    String    @map("tenant_id")
  timeSlotId  String    @map("time_slot_id")
  phoneNumber String    @map("tel")
  createdAt   DateTime? @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")


  timeSlot TimeSlots @relation(fields: [timeSlotId], references: [id])

  @@map("reservations")
}

model Subscriptions {
  id           Int       @id @default(autoincrement())
  adminId      String    @map("admin_id")
  name         String    @map("name")
  stripeId     String    @unique @map("stripe_id")
  stripeStatus String    @map("stripe_status")
  stripePrice  String?   @map("stripe_price")
  quantity     Int?      @map("quantity")
  trialEndsAt  DateTime? @map("trial_ends_at")
  endsAt       DateTime? @map("ends_at")
  createdAt    DateTime? @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")

  @@index([adminId, stripeStatus], name: "subscriptions_user_id_stripe_status_index")
  @@map("subscriptions")
}

model SubscriptionItems {
  id             Int       @id @default(autoincrement())
  subscriptionId Int       @map("subscription_id")
  stripeId       String    @unique @map("stripe_id")
  stripeProduct  String    @map("stripe_product")
  stripePrice    String    @map("stripe_price")
  quantity       Int?      @map("quantity")
  createdAt      DateTime? @map("created_at")
  updatedAt      DateTime? @updatedAt @map("updated_at")

  @@index([subscriptionId, stripePrice], name: "subscription_items_subscription_id_stripe_price_unique")
  @@map("subscription_items")
}
